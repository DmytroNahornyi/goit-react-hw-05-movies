{"version":3,"file":"static/js/844.8ac46783.chunk.js","mappings":"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","sources":["components/Cast/Cast.jsx","components/FilmDetails/FilmDetails.styled.jsx","components/FilmDetails/FilmDetails.jsx","components/MovieDetails/MovieDetails.jsx","components/Reviews/Reviews.jsx","components/Services/MovieAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport movieAPI from '../Services/MovieAPI';\n\nfunction Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const { cast } = await movieAPI.fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : 'https://via.placeholder.com/200x300?text=No+photo'\n                }\n                alt={name}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information available</p>\n      )}\n    </>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const FilmDetailsContainer = styled.div`\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #f7f7f7;\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0069d9;\n  }\n`;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FilmDetailsContainer, Button } from './FilmDetails.styled';\n\nconst FilmDetails = ({ movie }) => {\n  const navigate = useNavigate();\n\n  const handleGoBackClick = () => {\n    navigate(-1);\n  };\n\n  return (\n    <FilmDetailsContainer>\n      <h1>{movie.title}</h1>\n      <p>{movie.overview}</p>\n      <Button onClick={handleGoBackClick}>Go back</Button>\n    </FilmDetailsContainer>\n  );\n};\n\nexport default FilmDetails;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Link, Outlet } from 'react-router-dom';\nimport movieAPI from '../Services/MovieAPI';\nimport FilmDetails from '../FilmDetails/FilmDetails';\nimport Cast from '../Cast/Cast';\nimport Reviews from '../Reviews/Reviews';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      const data = await movieAPI.fetchMovieDetails(movieId);\n      setMovie(data);\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  if (!movie) return <h2>Loading...</h2>;\n  if (movie?.status_code === 34) return <h2>Movie not found</h2>;\n\n  return (\n    <div>\n      <FilmDetails movie={movie} />\n      <h2>{movie.title}</h2>\n      <img\n        src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <p>Rating: {movie.vote_average}</p>\n      <p>Release Date: {movie.release_date}</p>\n      <p>Genres: {movie.genres.map(genre => genre.name).join(', ')}</p>\n      <p>{movie.overview}</p>\n      <nav>\n        <ul>\n          <li>\n            <Link to={`/movies/${movieId}/cast`}>Cast</Link>\n          </li>\n          <li>\n            <Link to={`/movies/${movieId}/reviews`}>Reviews</Link>\n          </li>\n        </ul>\n      </nav>\n      <Outlet>\n        <div>\n          <Cast movieId={movieId} />\n        </div>\n        <div>\n          <Reviews movieId={movieId} />\n        </div>\n      </Outlet>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieAPI from '../Services/MovieAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const response = await MovieAPI.fetchMovieReviews(movieId);\n      setReviews(response.results);\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h4>{author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews found.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '7d23f984db6827219fae104a9cbe345d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieAPI = {\n  fetchMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  searchMovies(query, page = 1) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n      )\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error searching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieDetails(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie details:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie cast:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie reviews:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  getTrendingMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching trending movies:', error);\n        return Promise.reject(error);\n      });\n  },\n};\n\nexport default movieAPI;"],"names":["movieId","useState","cast","setCast","useEffect","fetchMovieCast","movieAPI","console","log","length","map","id","profile_path","name","character","src","alt","FilmDetailsContainer","styled","Button","movie","navigate","useNavigate","title","overview","onClick","setMovie","useParams","getMovieDetails","data","status_code","poster_path","vote_average","release_date","genres","genre","join","to","Cast","Reviews","reviews","setReviews","getReviews","MovieAPI","response","results","author","content","API_KEY","BASE_URL","fetchMovies","page","axios","then","catch","error","Promise","reject","searchMovies","query","fetchMovieDetails","fetchMovieReviews","getTrendingMovies"],"sourceRoot":""}