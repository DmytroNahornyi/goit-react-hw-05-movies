{"version":3,"file":"static/js/842.78b8a37a.chunk.js","mappings":"wNAmCA,UA/BA,WACE,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAE6BC,EAAAA,EAAAA,oBAF7B,OAEYC,EAFZ,OAGMH,EAAUG,EAASC,SAHzB,gDAKMC,QAAQC,MAAR,MALN,0DADc,uBAAC,WAAD,wBASdC,EACD,GAAE,KAGD,4BACE,4CACA,wBACGR,EAAOS,KAAI,SAACC,GAAD,OACV,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,UACGF,EAAMG,MADT,KACkB,IAAIC,KAAKJ,EAAMK,cAAcC,cAD/C,QADON,EAAME,GADL,QAUnB,C,mCC/BKK,EAAU,mCACVC,EAAW,+BAEXf,EAAW,CACfgB,YADe,WACQ,IAAXC,EAAU,uDAAH,EACjB,OAAOC,EAAAA,EAAAA,IAAA,UACGH,EADH,uCAC0CD,EAD1C,iBAC0DG,IAC9DE,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,IAAb,IACbC,OAAM,SAAAjB,GAEL,OADAD,QAAQmB,IAAI,yBAA0BlB,GAC/BmB,QAAQC,OAAOpB,EACvB,GACJ,EAEDqB,aAXe,SAWFC,GAAkB,IAAXT,EAAU,uDAAH,EACzB,OAAOC,EAAAA,EAAAA,IAAA,UAEAH,EAFA,iCAEiCD,EAFjC,kBAEkDY,EAFlD,iBAEgET,IAEpEE,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,IAAb,IACbC,OAAM,SAAAjB,GAEL,OADAD,QAAQmB,IAAI,0BAA2BlB,GAChCmB,QAAQC,OAAOpB,EACvB,GACJ,EAEDuB,kBAvBe,SAuBGC,GAChB,OAAOV,EAAAA,EAAAA,IAAA,UACGH,EADH,kBACqBa,EADrB,oBACwCd,IAC5CK,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,IAAb,IACbC,OAAM,SAAAjB,GAEL,OADAD,QAAQmB,IAAI,gCAAiClB,GACtCmB,QAAQC,OAAOpB,EACvB,GACJ,EAEDyB,eAjCe,SAiCAD,GACb,OAAOV,EAAAA,EAAAA,IAAA,UACGH,EADH,kBACqBa,EADrB,4BACgDd,IACpDK,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,IAAb,IACbC,OAAM,SAAAjB,GAEL,OADAD,QAAQmB,IAAI,6BAA8BlB,GACnCmB,QAAQC,OAAOpB,EACvB,GACJ,EAED0B,kBA3Ce,SA2CGF,GAChB,OAAOV,EAAAA,EAAAA,IAAA,UACGH,EADH,kBACqBa,EADrB,4BACgDd,IACpDK,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,IAAb,IACbC,OAAM,SAAAjB,GAEL,OADAD,QAAQmB,IAAI,gCAAiClB,GACtCmB,QAAQC,OAAOpB,EACvB,GACJ,EAED2B,kBArDe,WAqDc,IAAXd,EAAU,uDAAH,EACvB,OAAOC,EAAAA,EAAAA,IAAA,UACGH,EADH,uCAC0CD,EAD1C,iBAC0DG,IAC9DE,MAAK,SAAAlB,GAAQ,OAAIA,EAASmB,IAAb,IACbC,OAAM,SAAAjB,GAEL,OADAD,QAAQmB,IAAI,kCAAmClB,GACxCmB,QAAQC,OAAOpB,EACvB,GACJ,GAGH,K","sources":["components/Home/Home.jsx","components/Services/MovieAPI.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport movieAPI from \"../Services/MovieAPI\";\n\nfunction Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    async function fetchTrendingMovies() {\n        try {\n          const response = await movieAPI.getTrendingMovies();\n          setMovies(response.results);\n        } catch (error) {\n          console.error(error);\n        }\n      }\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <div>\n      <h1>Popular Movies</h1>\n      <ul>\n        {movies.map((movie) => (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`}>\n              {movie.title} ({new Date(movie.release_date).getFullYear()})\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default Home;\n","import axios from 'axios';\n\nconst API_KEY = '7d23f984db6827219fae104a9cbe345d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieAPI = {\n  fetchMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  searchMovies(query, page = 1) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n      )\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error searching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieDetails(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie details:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie cast:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie reviews:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  getTrendingMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching trending movies:', error);\n        return Promise.reject(error);\n      });\n  },\n};\n\nexport default movieAPI;"],"names":["useState","movies","setMovies","useEffect","movieAPI","response","results","console","error","fetchTrendingMovies","map","movie","to","id","title","Date","release_date","getFullYear","API_KEY","BASE_URL","fetchMovies","page","axios","then","data","catch","log","Promise","reject","searchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","getTrendingMovies"],"sourceRoot":""}