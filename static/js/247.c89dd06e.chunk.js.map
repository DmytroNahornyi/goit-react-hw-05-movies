{"version":3,"file":"static/js/247.c89dd06e.chunk.js","mappings":"gNAiDA,UA7CA,YAA4B,IAAZA,EAAW,EAAXA,QACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,+GAEIC,EAAAA,EAAAA,eAAwBN,GAF5B,gBAEXE,EAFW,EAEXA,KACRC,EAAQD,GAHW,gDAKnBK,QAAQC,IAAR,MALmB,yDAAH,qDAQpBH,GACD,GAAE,CAACL,KAGF,8BACGE,EAAKO,OAAS,GACb,wBACGP,EAAKQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBACEC,IACEH,EAAY,yCAC0BA,GAClC,oDAENI,IAAKH,KAEP,uBAAIA,KACJ,uCAAeC,OAVRH,EADD,OAgBZ,0DAIP,C,mCCzCKM,EAAU,mCACVC,EAAW,+BAEXZ,EAAW,CACfa,YADe,WACQ,IAAXC,EAAU,uDAAH,EACjB,OAAOC,EAAAA,EAAAA,IAAA,UACGH,EADH,uCAC0CD,EAD1C,iBAC0DG,IAC9DE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAnB,QAAQC,IAAI,yBAA0BkB,GAC/BC,QAAQC,OAAOF,EACvB,GACJ,EAEDG,aAXe,SAWFC,GAAkB,IAAXV,EAAU,uDAAH,EACzB,OAAOC,EAAAA,EAAAA,IAAA,UAEAH,EAFA,iCAEiCD,EAFjC,kBAEkDa,EAFlD,iBAEgEV,IAEpEE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAnB,QAAQC,IAAI,0BAA2BkB,GAChCC,QAAQC,OAAOF,EACvB,GACJ,EAEDK,kBAvBe,SAuBG/B,GAChB,OAAOqB,EAAAA,EAAAA,IAAA,UACGH,EADH,kBACqBlB,EADrB,oBACwCiB,IAC5CK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAnB,QAAQC,IAAI,gCAAiCkB,GACtCC,QAAQC,OAAOF,EACvB,GACJ,EAEDrB,eAjCe,SAiCAL,GACb,OAAOqB,EAAAA,EAAAA,IAAA,UACGH,EADH,kBACqBlB,EADrB,4BACgDiB,IACpDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAnB,QAAQC,IAAI,6BAA8BkB,GACnCC,QAAQC,OAAOF,EACvB,GACJ,EAEDM,kBA3Ce,SA2CGhC,GAChB,OAAOqB,EAAAA,EAAAA,IAAA,UACGH,EADH,kBACqBlB,EADrB,4BACgDiB,IACpDK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAnB,QAAQC,IAAI,gCAAiCkB,GACtCC,QAAQC,OAAOF,EACvB,GACJ,EAEDO,kBArDe,WAqDc,IAAXb,EAAU,uDAAH,EACvB,OAAOC,EAAAA,EAAAA,IAAA,UACGH,EADH,uCAC0CD,EAD1C,iBAC0DG,IAC9DE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAnB,QAAQC,IAAI,kCAAmCkB,GACxCC,QAAQC,OAAOF,EACvB,GACJ,GAGH,K","sources":["components/Cast/Cast.jsx","components/Services/MovieAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport movieAPI from '../Services/MovieAPI';\n\nfunction Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const fetchMovieCast = async () => {\n      try {\n        const { cast } = await movieAPI.fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchMovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : 'https://via.placeholder.com/200x300?text=No+photo'\n                }\n                alt={name}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information available</p>\n      )}\n    </>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst API_KEY = '7d23f984db6827219fae104a9cbe345d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieAPI = {\n  fetchMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  searchMovies(query, page = 1) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n      )\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error searching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieDetails(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie details:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie cast:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie reviews:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  getTrendingMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching trending movies:', error);\n        return Promise.reject(error);\n      });\n  },\n};\n\nexport default movieAPI;"],"names":["movieId","useState","cast","setCast","useEffect","fetchMovieCast","movieAPI","console","log","length","map","id","profile_path","name","character","src","alt","API_KEY","BASE_URL","fetchMovies","page","axios","then","response","data","catch","error","Promise","reject","searchMovies","query","fetchMovieDetails","fetchMovieReviews","getTrendingMovies"],"sourceRoot":""}