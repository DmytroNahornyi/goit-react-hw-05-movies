{"version":3,"file":"static/js/535.b577df60.chunk.js","mappings":"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","sources":["Pages/Cast/Cast.jsx","components/FilmDetails/FilmDetails.styled.jsx","components/FilmDetails/FilmDetails.jsx","Pages/MovieDetails/MovieDetails.styled.jsx","Pages/MovieDetails/MovieDetails.jsx","components/Services/MovieAPI.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport movieAPI from '../../components/Services/MovieAPI';\n\nfunction Cast({ movieId }) {\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    if (!movieId) {\n      console.log('No movieId provided');\n      return;\n    }\n\n    const fetchMovieCast = async () => {\n      try {\n        const { cast } = await movieAPI.fetchMovieCast(movieId);\n        setCast(cast);\n      } catch (error) {\n        console.log('Error fetching movie cast:', error);\n      }\n    };\n\n    fetchMovieCast();\n  }, [movieId]);\n\n  if (!movieId) {\n    return <p>No movieId provided</p>;\n  }\n\n  return (\n    <>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                    : 'https://via.placeholder.com/200x300?text=No+photo'\n                }\n                alt={name}\n              />\n              <p>{name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No cast information available</p>\n      )}\n    </>\n  );\n}\n\nCast.propTypes = {\n  movieId: PropTypes.string,\n};\n\nexport default Cast;\n","import styled from 'styled-components';\n\nexport const FilmDetailsContainer = styled.div`\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: #f7f7f7;\n`;\n\nexport const Button = styled.button`\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #007bff;\n  color: #fff;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #0069d9;\n  }\n`;\n","import React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { FilmDetailsContainer, Button } from './FilmDetails.styled';\n\nconst FilmDetails = ({ movie }) => {\n  const navigate = useNavigate();\n\n  const handleGoBackClick = () => {\n    navigate(-1);\n  };\n\n  return (\n    <FilmDetailsContainer>\n      <h1>{movie.title}</h1>\n      <p>{movie.overview}</p>\n      <Button onClick={handleGoBackClick}>Go back</Button>\n    </FilmDetailsContainer>\n  );\n};\n\nexport default FilmDetails;\n","import styled from 'styled-components';\n\nexport const MovieDetailsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const MovieDetailsContent = styled.div`\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #fff;\n  border-radius: 5px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\n  text-align: left;\n\n  h2 {\n    font-size: 32px;\n    margin-bottom: 10px;\n  }\n\n  img {\n    width: 100%;\n    max-width: 500px;\n    height: auto;\n    margin-bottom: 20px;\n  }\n\n  p {\n    font-size: 18px;\n    margin-bottom: 10px;\n  }\n`;\n\nexport const Navigation = styled.nav`\n  ul {\n    list-style: none;\n    display: flex;\n    margin-top: 20px;\n  }\n\n  li {\n    margin-right: 20px;\n  }\n\n  a {\n    text-decoration: none;\n    color: #000;\n    font-size: 18px;\n    padding: 10px;\n    border-radius: 5px;\n    transition: all 0.2s ease-in-out;\n\n    &:hover,\n    &.active {\n      background-color: #0074d9;\n      color: #fff;\n    }\n  }\n`;\n","import React, { useState, useEffect } from 'react';\nimport { useParams, Outlet, NavLink } from 'react-router-dom';\nimport movieAPI from '../../components/Services/MovieAPI';\nimport FilmDetails from '../../components/FilmDetails/FilmDetails';\nimport Cast from '../Cast/Cast';\n// import Reviews from '../Reviews/Reviews';\nimport {\n  MovieDetailsContainer,\n  MovieDetailsContent,\n  Navigation,\n} from './MovieDetails.styled';\n\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieDetails = async () => {\n      const data = await movieAPI.fetchMovieDetails(movieId);\n      setMovie(data);\n    };\n    getMovieDetails();\n  }, [movieId]);\n\n  if (!movie) return <h2>Loading...</h2>;\n  if (movie?.status_code === 34) return <h2>Movie not found</h2>;\n\n  return (\n    <MovieDetailsContainer>\n      <FilmDetails movie={movie} />\n      <MovieDetailsContent>\n        <h2>{movie.title}</h2>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${movie.poster_path}`}\n          alt={movie.title}\n        />\n        <p>Rating: {movie.vote_average}</p>\n        <p>Release Date: {movie.release_date}</p>\n        <p>Genres: {movie.genres.map(genre => genre.name).join(', ')}</p>\n        <p>{movie.overview}</p>\n        <Navigation>\n          <ul>\n            <li>\n              <NavLink to={`/movies/${movieId}/cast`}>Cast</NavLink>\n            </li>\n            <li>\n              <NavLink to={`/movies/${movieId}/reviews`}>Reviews</NavLink>\n            </li>\n          </ul>\n        </Navigation>\n        <Outlet>\n          <Cast movieId={movieId} />\n        </Outlet>\n      </MovieDetailsContent>\n    </MovieDetailsContainer>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst API_KEY = '7d23f984db6827219fae104a9cbe345d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieAPI = {\n  fetchMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  searchMovies(query, page = 1) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n      )\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error searching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieDetails(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie details:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie cast:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie reviews:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  getTrendingMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching trending movies:', error);\n        return Promise.reject(error);\n      });\n  },\n};\n\nexport default movieAPI;"],"names":["movieId","useState","cast","setCast","useEffect","fetchMovieCast","movieAPI","console","log","length","map","id","profile_path","name","character","src","alt","FilmDetailsContainer","styled","Button","movie","navigate","useNavigate","title","overview","onClick","MovieDetailsContainer","MovieDetailsContent","Navigation","setMovie","useParams","getMovieDetails","data","status_code","poster_path","vote_average","release_date","genres","genre","join","to","Cast","API_KEY","BASE_URL","fetchMovies","page","axios","then","response","catch","error","Promise","reject","searchMovies","query","fetchMovieDetails","fetchMovieReviews","getTrendingMovies"],"sourceRoot":""}