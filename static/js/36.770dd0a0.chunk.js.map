{"version":3,"file":"static/js/36.770dd0a0.chunk.js","mappings":"4PAyBA,EArBiB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OAClB,OACE,wBACGA,EAAOC,KAAI,SAACC,GAAD,OACV,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAA3B,SAAkCF,EAAMG,SADjCH,EAAME,GADL,KAOjB,ECqBD,EA/Be,WACb,OAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAON,EAAP,KAAeS,EAAf,KAMMC,EAAsB,mCAAG,WAAMC,GAAN,gFAC7BA,EAAMC,iBADuB,SAEHC,EAAAA,EAAAA,aAAsBN,GAFnB,gBAErBO,EAFqB,EAErBA,QACRL,EAAUK,GAHmB,2CAAH,sDAM5B,OACE,4BACE,2CACA,kBAAMC,SAAUL,EAAhB,WACE,kBACEM,KAAK,OACLC,YAAY,wBACZC,MAAOX,EACPY,SAlBwB,SAAAR,GAC9BH,EAAeG,EAAMS,OAAOF,MAC7B,KAkBK,mBAAQF,KAAK,SAAb,uBAEDhB,EAAOqB,OAAS,IAAK,SAAC,EAAD,CAAUrB,OAAQA,MAG7C,C,mCC/BKsB,EAAU,mCACVC,EAAW,+BAEXC,EAAW,CACfC,YADe,WACQ,IAAXC,EAAU,uDAAH,EACjB,OAAOC,EAAAA,EAAAA,IAAA,UACGJ,EADH,uCAC0CD,EAD1C,iBAC0DI,IAC9DE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,yBAA0BF,GAC/BG,QAAQC,OAAOJ,EACvB,GACJ,EAEDK,aAXe,SAWFC,GAAkB,IAAXZ,EAAU,uDAAH,EACzB,OAAOC,EAAAA,EAAAA,IAAA,UAEAJ,EAFA,iCAEiCD,EAFjC,kBAEkDgB,EAFlD,iBAEgEZ,IAEpEE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,0BAA2BF,GAChCG,QAAQC,OAAOJ,EACvB,GACJ,EAEDO,kBAvBe,SAuBGC,GAChB,OAAOb,EAAAA,EAAAA,IAAA,UACGJ,EADH,kBACqBiB,EADrB,oBACwClB,IAC5CM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,gCAAiCF,GACtCG,QAAQC,OAAOJ,EACvB,GACJ,EAEDS,eAjCe,SAiCAD,GACb,OAAOb,EAAAA,EAAAA,IAAA,UACGJ,EADH,kBACqBiB,EADrB,4BACgDlB,IACpDM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,6BAA8BF,GACnCG,QAAQC,OAAOJ,EACvB,GACJ,EAEDU,kBA3Ce,SA2CGF,GAChB,OAAOb,EAAAA,EAAAA,IAAA,UACGJ,EADH,kBACqBiB,EADrB,4BACgDlB,IACpDM,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,gCAAiCF,GACtCG,QAAQC,OAAOJ,EACvB,GACJ,EAEDW,kBArDe,WAqDc,IAAXjB,EAAU,uDAAH,EACvB,OAAOC,EAAAA,EAAAA,IAAA,UACGJ,EADH,uCAC0CD,EAD1C,iBAC0DI,IAC9DE,MAAK,SAAAC,GAAQ,OAAIA,EAASC,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,kCAAmCF,GACxCG,QAAQC,OAAOJ,EACvB,GACJ,GAGH,K","sources":["components/FilmList/FilmList.jsx","Pages/Movies/Movies.jsx","components/Services/MovieAPI.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst FilmList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map((movie) => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`}>{movie.title}</Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nFilmList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired\n    })\n  ).isRequired\n};\n\nexport default FilmList;\n","import React, { useState } from 'react';\nimport MovieAPI from '../../components/Services/MovieAPI';\nimport FilmList from '../../components/FilmList/FilmList';\n\nconst Movies = () => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  const handleSearchInputChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  const handleSearchFormSubmit = async event => {\n    event.preventDefault();\n    const { results } = await MovieAPI.searchMovies(searchQuery); // fixed line\n    setMovies(results);\n  };\n\n  return (\n    <div>\n      <h1>Search Movies</h1>\n      <form onSubmit={handleSearchFormSubmit}>\n        <input\n          type=\"text\"\n          placeholder=\"Search for a movie...\"\n          value={searchQuery}\n          onChange={handleSearchInputChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n      {movies.length > 0 && <FilmList movies={movies} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst API_KEY = '7d23f984db6827219fae104a9cbe345d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieAPI = {\n  fetchMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  searchMovies(query, page = 1) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n      )\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error searching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieDetails(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie details:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie cast:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie reviews:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  getTrendingMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching trending movies:', error);\n        return Promise.reject(error);\n      });\n  },\n};\n\nexport default movieAPI;"],"names":["movies","map","movie","to","id","title","useState","searchQuery","setSearchQuery","setMovies","handleSearchFormSubmit","event","preventDefault","MovieAPI","results","onSubmit","type","placeholder","value","onChange","target","length","API_KEY","BASE_URL","movieAPI","fetchMovies","page","axios","then","response","data","catch","error","console","log","Promise","reject","searchMovies","query","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","getTrendingMovies"],"sourceRoot":""}