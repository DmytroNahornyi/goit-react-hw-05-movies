{"version":3,"file":"static/js/390.8028eb26.chunk.js","mappings":"yNAmCA,UA/BgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,oGACMC,EAAAA,EAAAA,kBAA2BP,GADjC,OACXQ,EADW,OAEjBJ,EAAWI,EAASC,SAFH,2CAAH,qDAKhBH,GACD,GAAE,CAACN,KAGF,8BACGG,EAAQO,QACP,wBACGP,EAAQQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,EADE,OAQf,8CAIP,C,mCC/BKG,EAAU,mCACVC,EAAW,+BAEXC,EAAW,CACfC,YADe,WACQ,IAAXC,EAAU,uDAAH,EACjB,OAAOC,EAAAA,EAAAA,IAAA,UACGJ,EADH,uCAC0CD,EAD1C,iBAC0DI,IAC9DE,MAAK,SAAAb,GAAQ,OAAIA,EAASc,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,yBAA0BF,GAC/BG,QAAQC,OAAOJ,EACvB,GACJ,EAEDK,aAXe,SAWFC,GAAkB,IAAXX,EAAU,uDAAH,EACzB,OAAOC,EAAAA,EAAAA,IAAA,UAEAJ,EAFA,iCAEiCD,EAFjC,kBAEkDe,EAFlD,iBAEgEX,IAEpEE,MAAK,SAAAb,GAAQ,OAAIA,EAASc,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,0BAA2BF,GAChCG,QAAQC,OAAOJ,EACvB,GACJ,EAEDO,kBAvBe,SAuBG/B,GAChB,OAAOoB,EAAAA,EAAAA,IAAA,UACGJ,EADH,kBACqBhB,EADrB,oBACwCe,IAC5CM,MAAK,SAAAb,GAAQ,OAAIA,EAASc,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,gCAAiCF,GACtCG,QAAQC,OAAOJ,EACvB,GACJ,EAEDQ,eAjCe,SAiCAhC,GACb,OAAOoB,EAAAA,EAAAA,IAAA,UACGJ,EADH,kBACqBhB,EADrB,4BACgDe,IACpDM,MAAK,SAAAb,GAAQ,OAAIA,EAASc,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,6BAA8BF,GACnCG,QAAQC,OAAOJ,EACvB,GACJ,EAEDS,kBA3Ce,SA2CGjC,GAChB,OAAOoB,EAAAA,EAAAA,IAAA,UACGJ,EADH,kBACqBhB,EADrB,4BACgDe,IACpDM,MAAK,SAAAb,GAAQ,OAAIA,EAASc,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,gCAAiCF,GACtCG,QAAQC,OAAOJ,EACvB,GACJ,EAEDU,kBArDe,WAqDc,IAAXf,EAAU,uDAAH,EACvB,OAAOC,EAAAA,EAAAA,IAAA,UACGJ,EADH,uCAC0CD,EAD1C,iBAC0DI,IAC9DE,MAAK,SAAAb,GAAQ,OAAIA,EAASc,IAAb,IACbC,OAAM,SAAAC,GAEL,OADAC,QAAQC,IAAI,kCAAmCF,GACxCG,QAAQC,OAAOJ,EACvB,GACJ,GAGH,K","sources":["Pages/Reviews/Reviews.jsx","components/Services/MovieAPI.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport MovieAPI from '../../components/Services/MovieAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    const getReviews = async () => {\n      const response = await MovieAPI.fetchMovieReviews(movieId);\n      setReviews(response.results);\n    };\n\n    getReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews.length ? (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h4>{author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No reviews found.</p>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '7d23f984db6827219fae104a9cbe345d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nconst movieAPI = {\n  fetchMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  searchMovies(query, page = 1) {\n    return axios\n      .get(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=${page}`\n      )\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error searching movies:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieDetails(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie details:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieCast(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie cast:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  fetchMovieReviews(movieId) {\n    return axios\n      .get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching movie reviews:', error);\n        return Promise.reject(error);\n      });\n  },\n\n  getTrendingMovies(page = 1) {\n    return axios\n      .get(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${page}`)\n      .then(response => response.data)\n      .catch(error => {\n        console.log('Error fetching trending movies:', error);\n        return Promise.reject(error);\n      });\n  },\n};\n\nexport default movieAPI;"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","getReviews","MovieAPI","response","results","length","map","id","author","content","API_KEY","BASE_URL","movieAPI","fetchMovies","page","axios","then","data","catch","error","console","log","Promise","reject","searchMovies","query","fetchMovieDetails","fetchMovieCast","fetchMovieReviews","getTrendingMovies"],"sourceRoot":""}