{"version":3,"file":"static/js/321.d0e0d81d.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/api/fetch.js","components/BackLink/BackLink.styled.js","page/MoviesItem/MoviesItem.styled.js","components/MovieInformation/MovieInformation.jsx","page/MoviesItem/MoviesItem.jsx"],"sourcesContent":["const { TailSpin } = require('react-loader-spinner');\n\nconst Loader = () => {\n  return (\n    <div\n      style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        minHeight: '50px',\n      }}\n    >\n      <TailSpin\n        visible={true}\n        height=\"60\"\n        width=\"60\"\n        color={'#0170ca'}\n        ariaLabel=\"rotating-triangels-loading\"\n        wrapperStyle={{ marginLeft: 'auto', marginRight: 'auto' }}\n        wrapperClass=\"rotating-triangels-wrapper\"\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import axios from 'axios';\n\nconst API_KEY = '?api_key=7d23f984db6827219fae104a9cbe345d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrending() {\n  const trending = await axios.get(`${BASE_URL}/trending/movie/day${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data.results;\n  }\n}\n\nexport async function fetchMoviesId(id) {\n  const trending = await axios.get(`${BASE_URL}/movie/${id}${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data;\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  const trending = await axios.get(`${BASE_URL}/movie/${id}/reviews${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data;\n  }\n}\n\nexport async function fetchMoviesCast(id) {\n  const trending = await axios.get(`${BASE_URL}/movie/${id}/credits${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data;\n  }\n}\n\nexport async function fetchMoviesSearch(query) {\n  const trending = await axios.get(\n    `${BASE_URL}/search/movie${API_KEY}&query=${query}`\n  );\n\n  if (trending.status === 200) {\n    return trending.data;\n  }\n}\n","import styled from 'styled-components';\n\nexport const BackLinkWrap = styled.div`\n  width: 1280px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const BackLinkStyle = styled.button`\n  padding: 7px 15px;\n  border-radius: 0.5em;\n\n  display: flex;\n  width: max-content;\n  margin: 20px auto;\n  border: none;\n\n  font-size: 18px;\n  background-color: #4caf50;\n  color: #fff;\n\n  &:hover {\n    background-color: #ff4300;\n    box-shadow: rgb(150, 150, 150) 2px 2px 8px;\n  }\n`;\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const WrapSection = styled.section`\n  border-radius: 1em;\n\n  width: 1250px;\n  padding: 15px 15px;\n  margin: 0 auto;\n\n  background-color: #fff;\n  box-shadow: rgb(150, 150, 150) 2px 2px 10px;\n\n  & img {\n    width: 300px;\n    border-radius: 0.5em;\n  }\n`;\n\nexport const WrapImg = styled.section`\n  display: flex;\n  gap: 40px;\n\n  & > div {\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n  }\n`;\n\nexport const WrapDescr = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    margin-bottom: 30px;\n  }\n\n  & h2 {\n    margin-bottom: 8px;\n  }\n\n  & strong {\n    margin-bottom: 8px;\n  }\n`;\n\n//!======================\n\nexport const Information = styled.div`\n  margin-top: 40px;\n`;\n\nexport const Title = styled.h3`\n  font-size: 24px;\n  margin-bottom: 20px;\n  font-weight: bold;\n`;\n\nexport const InformationLink = styled(Link)`\n  padding: 5px 10px;\n  border-radius: 0.5em;\n\n  background-color: #4caf50;\n  color: #fff;\n\n  &:hover {\n    background-color: #ff4300;\n    box-shadow: rgb(150, 150, 150) 2px 2px 8px;\n  }\n`;\n//!======================\nexport const InformationList = styled.ul`\n  list-style: none;\n  display: flex;\n  /* flex-direction: column; */\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const BackLinkWrap = styled.div`\n  width: 1280px;\n  margin: 0 auto 20px;\n`;\n\nexport const BackLinkStyle = styled.button`\n  padding: 7px 15px;\n  border-radius: 0.5em;\n\n  display: flex;\n  width: max-content;\n  border: none;\n\n  font-size: 18px;\n  background-color: #4caf50;\n  color: #fff;\n\n  &:hover {\n    background-color: #ff4300;\n    box-shadow: rgb(150, 150, 150) 2px 2px 8px;\n  }\n`;\n","import {\n  Information,\n  InformationLink,\n  InformationList,\n  Title\n} from 'page/MoviesItem/MoviesItem.styled';\n\nexport function MovieInformation() {\n  return (\n    <Information>\n      <Title>More Information</Title>\n      <InformationList>\n        <li>\n          <InformationLink to={'cast'}>Cast</InformationLink>\n        </li>\n        <li>\n          <InformationLink to={'reviews'}>Reviews</InformationLink>\n        </li>\n      </InformationList>\n    </Information>\n  );\n}\n","import { Suspense, useEffect, useRef, useState } from 'react';\nimport { Outlet, useLocation, useNavigate, useParams } from 'react-router-dom';\n\nimport Loader from 'components/Loader/Loader';\nimport { fetchMoviesId } from 'components/api/fetch';\nimport { BackLinkStyle } from 'components/BackLink/BackLink.styled';\nimport { MovieInformation } from 'components/MovieInformation/MovieInformation';\nimport {\n  BackLinkWrap,\n  WrapDescr,\n  WrapImg,\n  WrapSection,\n} from './MoviesItem.styled';\n\nfunction MoviesItem() {\n  const [movies, setMovies] = useState({});\n\n  const idMovie = useParams();\n\n  const location = useLocation();\n  const navigate = useNavigate();\n  const backLinkHref = useRef(location?.state?.from ?? '/');\n\n  useEffect(() => {\n    if (movies.length) return;\n    fetchMoviesId(idMovie.id).then(movies => {\n      setMovies(movies);\n    });\n  }, [idMovie.id, movies.length]);\n\n  return (\n    <>\n      {Object.keys(movies).length !== 0 && (\n        <>\n          <BackLinkWrap>\n            <BackLinkStyle\n              onClick={() => {\n                navigate(backLinkHref.current);\n              }}\n            >\n              Go back\n            </BackLinkStyle>\n          </BackLinkWrap>\n          <WrapSection>\n            <WrapImg>\n              <img\n                src={`https://image.tmdb.org/t/p/w500${movies.poster_path}`}\n                alt=\"\"\n              />\n              <div>\n                <WrapDescr>\n                  <h2>{movies.title}</h2>\n                  <p>User Schore: {(movies.vote_average * 10).toFixed()}%</p>\n                </WrapDescr>\n                <WrapDescr>\n                  <strong>Overview</strong>\n                  <p>{movies.overview}</p>\n                </WrapDescr>\n                <div\n                  style={{ display: 'flex', justifyContent: 'space-between' }}\n                >\n                  <WrapDescr>\n                    <strong>Genres</strong>\n                    <p>{movies.genres.map(genre => genre.name).join(', ')}</p>\n                  </WrapDescr>\n                </div>\n                <MovieInformation />\n              </div>\n            </WrapImg>\n            <Suspense fallback={<Loader />}>\n              <Outlet />\n            </Suspense>\n          </WrapSection>\n        </>\n      )}\n    </>\n  );\n}\n\nexport default MoviesItem;\n"],"names":["TailSpin","require","style","display","justifyContent","alignItems","minHeight","visible","height","width","color","ariaLabel","wrapperStyle","marginLeft","marginRight","wrapperClass","API_KEY","BASE_URL","fetchTrending","axios","trending","status","data","results","fetchMoviesId","id","fetchMovieReviews","fetchMoviesCast","fetchMoviesSearch","query","BackLinkStyle","styled","WrapSection","WrapImg","WrapDescr","Information","Title","InformationLink","Link","InformationList","BackLinkWrap","MovieInformation","to","useState","movies","setMovies","idMovie","useParams","location","useLocation","navigate","useNavigate","backLinkHref","useRef","state","from","useEffect","length","then","Object","keys","onClick","current","src","poster_path","alt","title","vote_average","toFixed","overview","genres","map","genre","name","join","Suspense","fallback","Loader"],"sourceRoot":""}