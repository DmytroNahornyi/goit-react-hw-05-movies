{"version":3,"file":"static/js/419.1b7cab99.chunk.js","mappings":"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","sources":["components/api/fetch.js","page/Home/Home.styled.js","components/Search/SearchLists.jsx","page/Movies/Movies.styled.js","page/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '?api_key=7d23f984db6827219fae104a9cbe345d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function fetchTrending() {\n  const trending = await axios.get(`${BASE_URL}/trending/movie/day${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data.results;\n  }\n}\n\nexport async function fetchMoviesId(id) {\n  const trending = await axios.get(`${BASE_URL}/movie/${id}${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data;\n  }\n}\n\nexport async function fetchMovieReviews(id) {\n  const trending = await axios.get(`${BASE_URL}/movie/${id}/reviews${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data;\n  }\n}\n\nexport async function fetchMoviesCast(id) {\n  const trending = await axios.get(`${BASE_URL}/movie/${id}/credits${API_KEY}`);\n\n  if (trending.status === 200) {\n    return trending.data;\n  }\n}\n\nexport async function fetchMoviesSearch(query) {\n  const trending = await axios.get(\n    `${BASE_URL}/search/movie${API_KEY}&query=${query}`\n  );\n\n  if (trending.status === 200) {\n    return trending.data;\n  }\n}\n","import styled from 'styled-components';\n\nexport const WrapHomeStyle = styled.div`\n  width: 1280px;\n  margin: 20px auto;\n\n  padding-bottom: 60px;\n\n  & h1 {\n    display: block;\n    width: max-content;\n    margin: 0 auto;\n    margin-bottom: 20px;\n  }\n\n  /* & ul {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 30px;\n  } */\n\n  /* & li {\n    flex-basis: calc((100% - 90px) / 4);\n    border-radius: 0.5em;\n    overflow: hidden;\n    box-shadow: rgb(150, 150, 150) 10px 10px 20px;\n  } */\n\n  /* & img {\n  } */\n\n  /* & p {\n    padding: 8px 10px;\n  } */\n`;\n","import { Link, useLocation } from 'react-router-dom';\n\nfunction SearchList({ searchMovies }) {\n  const location = useLocation();\n\n  return (\n    <ul style={{ margin: '0', padding: '0', listStyle: 'none' }}>\n      {searchMovies.map((movie, index) => (\n        <li key={movie.id} style={{ marginBottom: '20px' }}>\n          <Link to={`${movie.id}`} state={{ from: location }}>\n            <span style={{ marginRight: '10px' }}>{index + 1}.</span>\n            <span>{movie.title}</span>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default SearchList;\n","import styled from 'styled-components';\n\nexport const WrapSectionSearch = styled.section`\n  width: 1280px;\n  margin: 0 auto;\n`;\n\nexport const FormField = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 0 0 20px 0;\n`;\n\nexport const Lable = styled.label`\n  display: flex;\n  align-items: center;\n  height: 30px;\n  & input {\n    margin-left: 10px;\n  }\n`;\n\nexport const SearchButton = styled.button`\n  padding: 7px 15px;\n  border-radius: 0.5em;\n  margin: 10px;\n  display: flex;\n  width: max-content;\n  border: none;\n\n  font-size: 18px;\n  background-color: #4caf50;\n  color: #fff;\n\n  &:hover {\n    background-color: #ff4300;\n    box-shadow: rgb(150, 150, 150) 2px 2px 8px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMoviesSearch } from 'components/api/fetch';\nimport SearchList from 'components/Search/SearchLists';\nimport { FormField, Lable, SearchButton } from './Movies.styled';\nimport { WrapHomeStyle } from 'page/Home/Home.styled';\n\nfunction Movies() {\n  const [inputChange, setInputChange] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const productName = (searchParams.get('query') ?? '').trim();\n\n  useEffect(() => {\n    setInputChange(productName);\n\n    if (productName === '') return;\n    fetchMoviesSearch(searchParams.get('query')).then(data => {\n      setSearchMovies(data.results);\n    });\n  }, [productName, searchParams]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (inputChange.trim() !== '') {\n      setSearchParams({ query: inputChange.trim() });\n    }\n\n    e.target.reset();\n  }\n  return (\n    <WrapHomeStyle>\n      <FormField onSubmit={handleSubmit}>\n        <Lable>\n          Enter a search movies\n          <input\n            value={inputChange}\n            onChange={e => {\n              setInputChange(e.target.value);\n            }}\n          ></input>\n        </Lable>\n        <SearchButton type=\"submit\">Search</SearchButton>\n      </FormField>\n      <SearchList searchMovies={searchMovies} />\n    </WrapHomeStyle>\n  );\n}\n\nexport default Movies;\n"],"names":["API_KEY","BASE_URL","fetchTrending","axios","trending","status","data","results","fetchMoviesId","id","fetchMovieReviews","fetchMoviesCast","fetchMoviesSearch","query","WrapHomeStyle","styled","searchMovies","location","useLocation","style","margin","padding","listStyle","map","movie","index","marginBottom","to","state","from","marginRight","title","FormField","Lable","SearchButton","useState","inputChange","setInputChange","setSearchMovies","useSearchParams","searchParams","setSearchParams","productName","get","trim","useEffect","then","onSubmit","e","preventDefault","target","reset","value","onChange","type"],"sourceRoot":""}